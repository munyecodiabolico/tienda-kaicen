//  Estilos generales que se aplicaran a toda la web 
//  como son la tipografia general y el color del texto que se aplicarán por defecto.

html {
    font-family: $font-stack;
    color: $terciary-color;
    font-size: 16px;
}

//  La siguiente regla hace que todos los elementos ocupen siempre lo que indica el width y el height
//  aunque pongamos padding porque lo que hace en este caso el padding es añadirlo en el interior de la
//  caja en lugar de ampliar el width o height hacia fuera
* {
    box-sizing: border-box;
}

//  Aqui asignamos un padding-top y bottom igual para que todas las secciones tengan la misma separación
.section {
    padding-top: 4rem;
    padding-bottom: 4rem;
}

//  Fuente y margin abajo que tendrán todos los h2 en general excepto a los que se le cambie de forma particular
h2 {
    font-size: 2.2rem;
    margin-bottom: 4rem;
}

//  Color que tendrán todos los enlaces de manera genérica
a {
    color: $terciary-color;
}

//  Estilos que tendrán en general todos las etiquetas select
select {
    border: 1px solid lighten($gray-999,15%);
    border-radius: 5px;
    padding: .5rem 1rem;
}

select:focus-visible {
    outline: $primary-color auto 1px;
}

//  Aplica una doble sombra a todos los elementos que se le aplique esta clase
.shadow {
    box-shadow: 0 1px 5px rgba(0, 0, 0, .2), 0 7px 20px rgba(0, 0, 0, .2);
}

//  Altura del 100% del alto del contenedor que contenga al elemento que se le aplique esta clase
.h-100 {
    height: 100%;
}

//  Ancho del 100% del alto del contenedor que contenga al elemento que se le aplique esta clase
.w-100 {
    width: 100%;
}

.textareas {
    position:relative;
}
.counter-text {
    position: absolute;
    right:15px;
    top: 5px;
    font-size: .7rem;
}
.pos-relative {
    position:relative;
}



//  Hacer que un contenedor siempre sea cuadrado sea cual sea el viewport 
//         <div class="card-item-img square">
//             <div class="content">
//                 <img src="img/pexels-pixabay-461198.jpg" alt="">
//             </div>
//         </div> 

//  La clase .square se usa en el contenedor que hace de mascara de la imagen
.square {
    position: relative;
    width: 100%;
    &:after {
      content: "";
      display: block;
      padding-bottom: 100%;
    }
    //  La clase .content se usa en un contenedor extra que envuelve la imagen
    .content {
      position: absolute;
      width: 100%;
      height: 100%;
    }
}
//  FIN Hacer que un contenedor siempre sea cuadrado sea cual sea el viewport   


//  Cuando hacemos una seccion donde hay varias columnas, si alguna es mas alta que las otras,
//  normalmente vemos diferentes alturas en dichos elementos, al contenedor que generamos dentro
//  de la columna hay que ponerle la clase mantener-alto. Ademas si queremos que un elemento en
//  concreto se alinee abajo en todos los contenedores, independientemente del contenido que tiene.
//  O sea, hay que crear dos contenedores, uno con la info que va alineada arriba y otro con lo que
//  ira alineado abajo. Con esta clase hara este efecto.

.mantener-alto{
    display: flex;
    flex-direction: column;
    height: 100%;
    justify-content: space-between;
}

//  Esta clase hace que al elemento que se la aplicas si es muy largo, el texto solo ocupa 3 lineas y le añade tres puntos '...?

.ellipsis {
    display: -webkit-box;
    -webkit-line-clamp: 5;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
//  Estilos por defecto para todos los botones de la web
//  La propieda transition lo que hace es que cuando pasas o pulsas encima del boton
//  el cambio de color, tamaño, etc. se haga de manera suave
//  La propiedad cursor:pointer hace que se vea la manita cuando pasas por encima  

.btn {
    font-size: 1rem;
    padding: 1rem 2rem;
    border: none;
    border-radius: 5px;
    transition: all .3s ease-in-out;
    cursor: pointer;
    background-color: $terciary-color;
}

//  Clase extra añadida a la de btn para que sea más pequeño
.btn-sm {
    font-size:90%;
    padding:.7rem 1.5rem;
}

//  Clase extra añadida a la de btn para que sea más grande
.btn-lg {
    font-size: 1.5rem;
}

//  Las próximas 3 clases extra añadida a la de btn para personalizar los botones principales de la web y sus efectos
.btn-principal {
    border: 3px solid $white;
    background-color: $primary-color;
    color: $white;
    &:hover {
        background-color: darken($primary-color,10%);
    }
    &:focus {
        background-color: darken($primary-color,20%);
    }
}


//  Las próximas 3 clases extra añadida a la de btn para personalizar los botones secundarios de la web y sus efectos
.btn-secondary {
    background-color: $gray-999;
    color: $white;
    &:hover {
        background-color:  darken($gray-999,15%);
        color: white;
    }
    &:focus {
        background-color: darken($gray-999,25%);
    }
}


//  Clase para aplicar el color principal de la web a los distintos elementos
.color-principal {
    color: $primary-color;
}

//  Clase para aplicar el color principal a los fondos de los distintos elementos
.background-principal {
    background-color: $primary-color;
}

//  Hace que las img a las que se les aplica esta clase se amplien o reduzcan proporcionalmente
//  a su contenedor a fin de que no quede espacio en blanco, ampliando o reduciendo desde el centro
//  de la imagen
.img-responsive {
    height: 100%;
    width: 100%;
    object-fit: cover;
}

//  Las próximas 3 clases sirven para alinear los textos a izquierda, derecha o centro
.text-align-left {
    text-align: left;
}

.text-align-right {
    text-align: right;
}

.text-align-center {
    text-align: center;
}